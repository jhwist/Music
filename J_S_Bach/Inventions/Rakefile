INPUT = (1..15).collect { |n| "bach-inventionen-#{"%02d" % n}.ly" }
ARTIFACTS = %w[all-in-one.pdf]

task :default => ["score:all"]

namespace "score" do
  desc "Create the All-In-One score"
  task :all do
    out = File.new("test.ly","w")
    (1..15).each do |invention|
      src = "bach-invention-%02d.ly" %invention
      error unless File.exists?(src)
      out << "%%%%%%%%%%%%%%%%%%%%%%%%%\n"
      out << "%% Invention No. #{invention}\n"
      out << "%%%%%%%%%%%%%%%%%%%%%%%%%\n"
      out << "\\include \"%s\"\n" %src
      out << make_book_part(invention, "Partitur")
    end
  end

  desc "Create the Violin score"
  task :violin do
  end

  desc "Create the Cello score"
  task :cello do
  end
end

namespace "pdf" do
  desc "Generate the All-In-One PDF"
  task :all do
  end

  desc "Generate the Violin PDF"
  task :violin do
  end

  desc "Generate the Cello PDF"
  task :cello do
  end
end

desc "Remove Artifacts"
task :clean do
  ARTIFACTS.each do |artifact|
    File.unlink(artifact)
  end
end

def error
  puts "Ooops?"
  exit
end

def make_book_part(invention, instrument)
  return "\\bookpart {\n\\header {\n instrument = \"#{instrument}\"\n}\n\
  \\tocItem \\markup \"Invention No. #{invention} (#{instrument})\"\n\
  }\n"
end
